import { ClientMessageBrokerFactory } from '@angular/platform-webworker';
import { AdvancedRenderer, RendererGlobalTarget } from '../../advanced-renderer';
import { ExpressionArguments } from '../../expression';
export declare class AdvancedRendererWorker extends AdvancedRenderer {
    private brokerFactory;
    private broker;
    constructor(brokerFactory: ClientMessageBrokerFactory);
    execute(expression: string, args?: ExpressionArguments): Promise<any>;
    invokeElementMethod(element: any, method: string, args?: any[]): Promise<any>;
    invokeGlobalTargetMethod(target: RendererGlobalTarget, method: string, args?: any[]): Promise<any>;
    setGlobalTargetPropery(target: RendererGlobalTarget, prop: string, value: any): void;
    getGlobalTargetProperty(target: RendererGlobalTarget, prop: string): Promise<any>;
    private _callTask(task, args?);
}
