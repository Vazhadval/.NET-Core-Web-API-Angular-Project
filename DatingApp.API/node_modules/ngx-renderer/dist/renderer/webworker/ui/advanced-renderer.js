import { Injectable } from '@angular/core';
import { ServiceMessageBrokerFactory } from '@angular/platform-webworker';
import { Serializer } from '@angular/platform-webworker/src/web_workers/shared/serializer';
import { AdvancedRenderer } from '../../advanced-renderer';
import { isElementExpression } from '../../expression';
import { RENDERER_CALL_TASK, RENDERER_CHANNEL } from '../shared/advanced-renderer';
export class AdvancedRendererUi {
    /**
     * @param {?} brokerFactory
     * @param {?} renderer
     * @param {?} serializer
     */
    constructor(brokerFactory, renderer, serializer) {
        this.brokerFactory = brokerFactory;
        this.renderer = renderer;
        this.serializer = serializer;
        this.broker = this.brokerFactory.createMessageBroker(RENDERER_CHANNEL, false);
    }
    /**
     * @return {?}
     */
    setup() {
        this.broker.registerMethod(RENDERER_CALL_TASK, [1 /* PRIMITIVE */, 1 /* PRIMITIVE */], this._callTask.bind(this), 1 /* PRIMITIVE */);
    }
    /**
     * @param {?} task
     * @param {?} args
     * @return {?}
     */
    _callTask(task, args) {
        return this.renderer.getMethod(task)(...this._deserializeArgs(args));
    }
    /**
     * @param {?} arg
     * @return {?}
     */
    _deserializeArgs(arg) {
        if (Array.isArray(arg)) {
            return arg.map(a => this._deserializeArgs(a));
        }
        else if (typeof arg === 'object') {
            if (isElementExpression(arg)) {
                arg.value = this.serializer.deserialize(arg.value, 2 /* RENDER_STORE_OBJECT */);
            }
            else {
                Object.keys(arg || {}).forEach(key => arg[key] = this._deserializeArgs(arg[key]));
            }
        }
        return arg;
    }
}
AdvancedRendererUi.decorators = [
    { type: Injectable },
];
/**
 * @nocollapse
 */
AdvancedRendererUi.ctorParameters = () => [
    { type: ServiceMessageBrokerFactory, },
    { type: AdvancedRenderer, },
    { type: Serializer, },
];
function AdvancedRendererUi_tsickle_Closure_declarations() {
    /** @type {?} */
    AdvancedRendererUi.decorators;
    /**
     * @nocollapse
     * @type {?}
     */
    AdvancedRendererUi.ctorParameters;
    /** @type {?} */
    AdvancedRendererUi.prototype.broker;
    /** @type {?} */
    AdvancedRendererUi.prototype.brokerFactory;
    /** @type {?} */
    AdvancedRendererUi.prototype.renderer;
    /** @type {?} */
    AdvancedRendererUi.prototype.serializer;
}
//# sourceMappingURL=advanced-renderer.js.map